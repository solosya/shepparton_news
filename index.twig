{{ set(this, 'title', _Blog.getBlogTitle()) }}


{% cache 'indexCache_1' 300 %}

{% set networkData = getCache("networkData") %}
{% if (networkData is empty) %}
    {% set networkData = _Network.getNetworkData() %}
    {% set cache = setCache("networkData", networkData, 500) %}
{% endif %}


{% set blogData    = _Blog.getBlog() %}
{% set layout      = blogData.layout %}
{% set site        = networkData.title | lower | split(" ")[0]%}
{% set homeBlog    = blogData['title'] | lower %}
{% set layoutTitle = _Page.getLayoutTitle() | lower | replace({' ': '_'}) %}

{% set dev = _AppHelper.getApplicationEnv() == 'DEV' ? false : false %}
{% set config = _Network.getThemeConfig() %}


{% set sectionOrder = [] %}
{% set blogFeeds =  {} %}






{# *******************************************************
            CONFIG OPTIONS SET IN PLATFORM
******************************************************* #}

{% if config['active'] is not defined or config['active'] == true %}

    {% if config['page']['index']['sections'] is defined %}
        {% set pageSections = config['page']['index']['sections'] %}
        {% set sectionOrder = pageSections | keys %}

        {% set blogFeeds = {} %}

        {% for i, panel in pageSections %}

            {% if panel['articleOrder'] is defined %}

                {# If a panel has multiple blogs we get the count of items to fetch from iterating
                over the articleOrder array #}
                {% for blogName in panel['articleOrder'] %}
                    {% if blogFeeds[blogName] is not defined %}
                        {% set params = {"limit": 1} %}
                    {% else %}
                        {% set count = blogFeeds[blogName].limit %}
                        {% set params = { "limit" : count + 1} %}
                    {% endif %}

                    {% set pinned = panel['excludePinned'] is defined ? panel['excludePinned'] : false %}
                    {% if pinned == true or pinned == 'true' %}
                        {% set params = params | merge({'excludePinned': true})%}
                    {% endif %}
                    {% set blogFeeds = blogFeeds | merge({ (blogName): params }) %}

                {% endfor %}


            {# If a panel has a single blog we get the count of items to fetch from checking the articleCount key #}
            {% else %}

                {% set blogName = panel['blog'] %}

                {% if panel['articleCount'] is defined %}

                    {% set count = panel['articleCount'] %}

                    {% if blogFeeds[blogName] is not defined or blogFeeds[blogName].limit < count %}
                        {% set params = { "limit" : count} %}
                        
                        {% set pinned = panel['excludePinned'] is defined ? panel['excludePinned'] : false %}
                        {% if pinned == true or pinned == 'true' %}
                            {% set params = params | merge({'excludePinned': true})%}
                        {% endif %}
                        
                        {% set blogFeeds = blogFeeds | merge({ (blogName): params }) %}
                    {% endif %}

                {% endif %}
            {% endif %}

        {% endfor %}
    {% endif %}




    {% if layoutTitle == 'major_breaking_news' %}

        {% if pageSections['breaking_news'] is defined %}

            {% set blogFeeds = blogFeeds | merge({ 'breaking news': { "limit" : 6} }) %}

            {% set pageSections = pageSections |
                merge({'breaking_news' : pageSections['breaking_news'] |
                merge({'active'        : true})})
            %}
        {% endif %}

    {% endif %}


    {% if layoutTitle == 'minor_breaking_news' %}
        {% if config['page']['index']['minor-breaking-news'] is defined %}
            {% set breaking = config['page']['index']['minor-breaking-news'] %}
            {% set breaking = breaking | merge({'active': true}) %}


            {% set blogFeeds = blogFeeds | merge({
                (breaking.blog) : {
                    "limit" : breaking.articleCount
                    }
                }) %}

            {% set pageSections = [breaking] | merge(pageSections) %}


        {% endif %}
    {% endif %}

{% endif %}







{# *******************************************************
                Fetch all needed feeds
******************************************************* #}
{% for key in blogFeeds|keys %}

    {% set break = false %}
    {% for blog in networkData.networkBlogs if not break %}


        {# FOR DEV  #}
        {% if dev %}
            {% set blogFeeds = blogFeeds | merge({
                (key) : {
                    'feed' : _Blog.getBlogFeed({'limit': 1, 'offset': 0}),
                    'link' : '#' }
                }) %}
        {% endif %}


        {# FOR PRODUCTION #}
        {% if not dev and blog.title | lower == key | lower %}
            {% set pinned = blogFeeds[key]['excludePinned'] is defined ? blogFeeds[key]['excludePinned'] : false %}
            {% set feedParams = {'limit': blogFeeds[key]['limit'], 'offset': 0, 'blogid':blog.guid} %}
            {% if pinned == true or pinned == 'true' %}
                {% set feedParams = feedParams | merge({'includePinned': false})%}
            {% endif %}
            {% set feed = _Blog.getBlogFeed(feedParams) %}

            {% set blogFeeds = blogFeeds | merge({
                (key) : {
                    'feed'      : feed,
                    'link'      : blog.link
                    }
                }) %}
            {% set break = true %}
        {% endif %}

    {% endfor %}
{% endfor %}




<main id="main" class="site-main" role="main" data-layout="{{layoutTitle}}">


    {# *******************************************************
                        RENDER SECTIONS
    ******************************************************* #}

    {% for pagesection in sectionOrder %}

        {% if pageSections[pagesection]['active'] is not defined or pageSections[pagesection]['active'] == true %}

            {% set params = {
                'section'     : pageSections[pagesection],
                'blogFeeds'   : blogFeeds,
                'site'        : site,
                'dev'         : dev,
                'networkData' : networkData,
                'blogData'    : blogData
            } %}

            {{this.render('render.twig', params) | raw}}




            {# {% if loop.index in bannerSpots %}
                <div class="ad-container">
                    <div class='advert-desktop advert-tablet' data-adsize="banner"></div>
                </div>
                <div class="ad-container col-sm-9 visible-xs-block">
                    <div class='advert-mobile' data-adsize="mrec"></div>
                </div>
            {% endif %} #}


        {% endif %}

    {% endfor %}



</main><!-- .site-main -->
{% if config['newsletter'] is defined and config['newsletter'] != "" %}
    <script>

        ga(function(tracker) {
            // Gets the client ID of the default tracker.
            var clientId = tracker.get('clientId');
            // Gets a reference to the window object of the destination iframe.
            var frameWindow = document.getElementById('newsletter-iframe').contentWindow;
            // Sends the client ID to the window inside the destination frame.
            frameWindow.postMessage(clientId, '{{config['newsletter']}}');
        });
    </script>
{% endif %}



<div class='advert-desktop advert-tablet' data-adsize="interstitial"></div>
<div class='advert-desktop advert-tablet' data-adsize="interstitial"></div>
<div class='advert-desktop advert-tablet' data-adsize="interstitial"></div>
{# <div class='advert-desktop' data-adsize="teads"></div> #}

{% endcache %}
